---
title: Part1:Collection, cleaning and transformation
---


## R basics with `intro_new.R`
In preparation for the first session, please work yourself through the `intro_new.R` file. You can download the file from [Moodle]() or [from here]().

```{r,echo=TRUE,eval=FALSE}
#######
## Introduction to programming // R 101
######


#### 
# Watch the following videos that explain the main components of R
# Functions: https://vimeo.com/220490105
# -----------------------------------------
# Arguments: https://vimeo.com/220490157
#------------------------------------------
# Objects: https://vimeo.com/220493412 
# -----------------------------------------
# Vectors: https://vimeo.com/220490316 
# -----------------------------------------
# Data Types: https://vimeo.com/220490241 


#### 
# 1. Now try to solve the following tasks:

# 1.1 Execute the following lines. Try to explain the differences between line 28, 30 and 31?
5+4
a <- 5
b <- 4
c <- a - b
d <- c(a,b)
sum(a,b)
max(a,b)
e <- sum(a,b)
f <- a + b 



# 1.2 Why does the following snippet return NA?
# What does NA mean? (try to google for it)
# What can you do to make it return a number? (look in the documentation for help)
sum(1,2,3,7,NA)



# 1.3 Investigate the following four vectors:
# Use the function typeof() to investigate each vectors datatype
# What is suprising about v4? Can you explain what happened?
# How can you check whether 6 is part of v3?
# Use length() to check whether v1 and v2 are of similar length?
v1 <- c('one','two','three','four')
v2 <- c('1','2','3','4')
v3 <- c(1,2,3,4,5)
v4 <- c(1,'two',3)



#2.Investigate the built in data-set 'mtcars'. 
# Use str(mtcars) to answer the following questions:

    # Which data type does the data-set have?
    # How many variables and observartions does the data-set have?
    # Call the help function for the data-set 
    # to find out about the meaning of the variables
    # Select three variables of the data set and save them in a 
    # single new vector, one for each
    # Can you select a single row of the data frame using base R only? 
    # Try to google/use stackoverflow for help!





###########
# Finally watch the video on packages in R
# Packages: https://vimeo.com/220490447 

# Install the package tidyverse and make it available for use

# To check whether you were successful try to 
# run the following code snippet: 

ggplot(data = diamonds) +
     geom_bar(mapping = aes(x = cut))

```

## Intalling and loading packages
Base R can easily be extended by additional functions, data and routines that are wrapped in so called *packages*. R has a large community that develops packages on a daily basis which makes the programming language so accessible and versatile. Packages can either be installed via the RStudio GUI or via the console/your R code. You use the function `install.packages()` and put in the name of the package. As mentioned earlier we will use the tidyverse. We also start with a packages that gives us access to a popular data set, the palmer penguins data. After installing the packages you also need to make them accessible. This you do by using the function `require()` or `library()`. Note that packages only need to be installed once. However, everytime you reopen your RStudio, you also need to make the package accessible again via either `require()` or `library()`.

```{r,echo=FALSE,eval=TRUE,message=FALSE}
#install.packages("tidyverse")
#install.packages("palmerpenguins")
require(tidyverse)
require(palmerpenguins)
```

```{r,echo=TRUE,eval=FALSE}
install.packages("tidyverse")
install.packages("palmerpenguins")
require(tidyverse)
require(palmerpenguins)
```

### Let them eat cake
Let's have a look at the `penguins` data and do a first little bar chart of the penguins. 

```{r}
# We save the built-in dataset into a data.frame/tibble that lives in your environment.
penguins_data<-penguins
penguins_data
penguins_data%>%ggplot(aes(species))+geom_bar()
```


### Importing data from files
The tidyverse has a package called `readr` that is specifically dedicated to load various kinds of files, e.g. .csv, .tsv, excel   and so on.

```{r}



```

## Dplyr basics
Now we get to know the verbs that are part of `dplyr`. We start with the `filter()` function and the different logical operators e.g.`AND, OR, NOT, is.na()`. We will aim at answering the following questions: 

* Find all penguins that were found on island Dream
* Find all penguins that are heavier than 4 kg
* Find all penguins that are female and heavier than 4 kg
* Are there more male or female penguins that are heavier than 4kg?
* Find all penguins where the sex is not missing (NA)


```{r}


```